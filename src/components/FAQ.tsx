import React, { useState } from 'react';
import { ChevronDown, ChevronUp, HelpCircle } from 'lucide-react';

const FAQ = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const faqs = [
    {
      question: "–î–æ—Ä–æ–≥–æ",
      answer: "–ù–µ—Ç üôÇ –í—ã –±–µ—Ä—ë—Ç–µ –Ω–µ —Ñ–∞–π–ª, –∞ –∂–∏–≤–æ–π –∫–∞–Ω–∞–ª + –∫–æ–º—å—é–Ω–∏—Ç–∏ + –±–æ–Ω—É—Å—ã + –º–æ—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è ¬´—á—Ç–æ –≥–æ—Ç–æ–≤–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è¬ª. –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–µ–Ω–µ–≥: –º–µ–Ω—å—à–µ –∑–∞–∫–∞–∑–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏, –º–µ–Ω—å—à–µ ¬´–ø—É—Å—Ç—ã—Ö¬ª –ø–æ–∫—É–ø–æ–∫ ‚Üí –ü–æ—ç—Ç–æ–º—É —ç—Ç–æ –≤—ã–≥–æ–¥–Ω–µ–µ, —á–µ–º —Ä–∞–∑–æ–≤–∞—è –∫–Ω–∏–≥–∞."
    },
    {
      question: "–Ø ‚Äî –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–∫–∞/—É –º–µ–Ω—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
      answer: "–£ –º–µ–Ω—è –≤ –∫–∞–Ω–∞–ª–µ —Ç–µ–≥–∏ –∏ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–º–µ–Ω—ã –≤ –∫–∞–∂–¥–æ–º —Ä–µ—Ü–µ–ø—Ç–µ. –ï—Å–ª–∏ —É–∫–∞–∂–µ—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –ø–æ–¥ –≤–∞—Å."
    },
    {
      question: "–ê –µ—Å–ª–∏ —è –Ω–∞ –ì–í?",
      answer: "–ö–∞–Ω–∞–ª ‚Äî –ø—Ä–æ –æ–±—â–∏–µ –∏–¥–µ–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è. –ù–∞ –ì–í –≤—Å—ë –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ ‚Äî –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç—å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –ø–µ–¥–∏–∞—Ç—Ä–∞."
    },
    {
      question: "–ù—É–∂–Ω—ã –ª–∏ –∫—É—Ö–æ–Ω–Ω—ã–µ –≤–µ—Å—ã –∏ —Å—É–ø–µ—Ä-–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã?",
      answer: "–ù–µ—Ç. –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ ¬´–∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ —É –¥–æ–º–∞¬ª. –í–µ—Å—ã –ø–æ–º–æ–≥–∞—é—Ç —Ç–æ—á–Ω–æ—Å—Ç–∏, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã."
    },
    {
      question: "–ü–æ—á–µ–º—É –∫–∞–Ω–∞–ª, –∞ –Ω–µ PDF?",
      answer: "–ü–æ—Ç–æ–º—É —á—Ç–æ –∂–∏–≤–æ–π —Ñ–æ—Ä–º–∞—Ç: —É–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–≥–∞–º, –æ–±—Å—É–∂–¥–µ–Ω–∏—è, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –≠—Ç–æ ¬´—Å –≤–∞–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å¬ª, –∞ –Ω–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π ¬´–ª–µ–∂–∏—Ç –º—ë—Ä—Ç–≤—ã–º¬ª."
    },
    {
      question: "–ß—Ç–æ –∑–∞ –±–æ–Ω—É—Å—ã?",
      answer: "–Ø –Ω–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞—é –∏—Ö –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –º–æ–π –ª–∏—á–Ω—ã–π ¬´—Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª¬ª: –±—ã—Å—Ç—Ä—ã–µ —Å—Ö–µ–º—ã, –º–∏–Ω–∏-—Ä—É—Ç–∏–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –ó–∞–π–¥—ë—Ç–µ –≤ –∫–∞–Ω–∞–ª ‚Äî –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –Ω–∞–±–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π —è –≤—Å–µ –≤—Ä–µ–º—è –ø–æ–ø–æ–ª–Ω—è—é. –ò–º–µ–Ω–Ω–æ —Ä–∞–¥–∏ –Ω–µ–≥–æ –¥–µ–≤—á–æ–Ω–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–¥–æ–ª–≥–æ. üíõ"
    },
    {
      question: "–°–∫–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ—Å—Ç—É–ø?",
      answer: "–î–æ—Å—Ç—É–ø –¥–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞. –í—Ö–æ–¥ –æ–¥–∏–Ω —Ä–∞–∑ ‚Äî –ø–æ–ª—å–∑–∞ –Ω–∞–¥–æ–ª–≥–æ. ‚ú®"
    }
  ];

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section className="py-20 bg-gradient-to-b from-gray-50 to-gray-100 relative overflow-hidden">
      <div className="container mx-auto px-6">
        <div className="text-center mb-16">
          <div className="inline-flex items-center gap-2 bg-white px-6 py-3 rounded-full shadow-lg mb-6">
            <HelpCircle className="w-6 h-6 text-coral-500" />
            <span className="text-coral-600 font-semibold font-montserrat">–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</span>
          </div>
          
          <h2 className="text-4xl lg:text-5xl font-bold text-graphite mb-6 font-montserrat">
            –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
          </h2>
        </div>

        {/* Layout inspired by the reference image */}
        <div className="relative max-w-7xl mx-auto">
          {/* Central Bowl Image */}
          <div className="absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 z-10">
            <img 
              src="https://i.ibb.co/MDnPRNFr/image.png" 
              alt="–ó–¥–æ—Ä–æ–≤–∞—è –µ–¥–∞"
              className="w-full h-full object-contain"
            />
          </div>

          {/* FAQ Items positioned around the bowl */}
          <div className="relative min-h-[800px]">
            {/* Top questions */}
            <div className="absolute top-0 left-1/2 transform -translate-x-1/2 w-80">
              <div className="bg-white rounded-2xl shadow-lg p-4 mb-4 animate-fade-in-up">
                <button
                  onClick={() => toggleFAQ(0)}
                  className="w-full text-left flex items-center justify-between hover:bg-gray-50 transition-colors duration-200"
                >
                  <h3 className="text-lg font-semibold text-graphite font-montserrat">
                    {faqs[0].question}
                  </h3>
                  {openIndex === 0 ? (
                    <ChevronUp className="w-5 h-5 text-coral-500 flex-shrink-0" />
                  ) : (
                    <ChevronDown className="w-5 h-5 text-gray-400 flex-shrink-0" />
                  )}
                </button>
                {openIndex === 0 && (
                  <div className="mt-3 pt-3 border-t border-gray-100">
                    <p className="text-gray-600 leading-relaxed font-manrope text-sm">
                      {faqs[0].answer}
                    </p>
                  </div>
                )}
              </div>
            </div>

            {/* Left side questions */}
            <div className="absolute left-0 top-1/2 transform -translate-y-1/2 w-72 space-y-4">
              {[1, 2].map((index) => (
                <div key={index} className="bg-white rounded-2xl shadow-lg p-4 animate-fade-in-up" style={{ animationDelay: `${index * 0.1}s` }}>
                  <button
                    onClick={() => toggleFAQ(index)}
                    className="w-full text-left flex items-center justify-between hover:bg-gray-50 transition-colors duration-200"
                  >
                    <h3 className="text-lg font-semibold text-graphite font-montserrat">
                      {faqs[index].question}
                    </h3>
                    {openIndex === index ? (
                      <ChevronUp className="w-5 h-5 text-coral-500 flex-shrink-0" />
                    ) : (
                      <ChevronDown className="w-5 h-5 text-gray-400 flex-shrink-0" />
                    )}
                  </button>
                  {openIndex === index && (
                    <div className="mt-3 pt-3 border-t border-gray-100">
                      <p className="text-gray-600 leading-relaxed font-manrope text-sm">
                        {faqs[index].answer}
                      </p>
                    </div>
                  )}
                </div>
              ))}
            </div>

            {/* Right side questions */}
            <div className="absolute right-0 top-1/2 transform -translate-y-1/2 w-72 space-y-4">
              {[3, 4].map((index) => (
                <div key={index} className="bg-white rounded-2xl shadow-lg p-4 animate-fade-in-up" style={{ animationDelay: `${index * 0.1}s` }}>
                  <button
                    onClick={() => toggleFAQ(index)}
                    className="w-full text-left flex items-center justify-between hover:bg-gray-50 transition-colors duration-200"
                  >
                    <h3 className="text-lg font-semibold text-graphite font-montserrat">
                      {faqs[index].question}
                    </h3>
                    {openIndex === index ? (
                      <ChevronUp className="w-5 h-5 text-coral-500 flex-shrink-0" />
                    ) : (
                      <ChevronDown className="w-5 h-5 text-gray-400 flex-shrink-0" />
                    )}
                  </button>
                  {openIndex === index && (
                    <div className="mt-3 pt-3 border-t border-gray-100">
                      <p className="text-gray-600 leading-relaxed font-manrope text-sm">
                        {faqs[index].answer}
                      </p>
                    </div>
                  )}
                </div>
              ))}
            </div>

            {/* Bottom questions */}
            <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-80 space-y-4">
              {[5, 6].map((index) => (
                <div key={index} className="bg-white rounded-2xl shadow-lg p-4 animate-fade-in-up" style={{ animationDelay: `${index * 0.1}s` }}>
                  <button
                    onClick={() => toggleFAQ(index)}
                    className="w-full text-left flex items-center justify-between hover:bg-gray-50 transition-colors duration-200"
                  >
                    <h3 className="text-lg font-semibold text-graphite font-montserrat">
                      {faqs[index].question}
                    </h3>
                    {openIndex === index ? (
                      <ChevronUp className="w-5 h-5 text-coral-500 flex-shrink-0" />
                    ) : (
                      <ChevronDown className="w-5 h-5 text-gray-400 flex-shrink-0" />
                    )}
                  </button>
                  {openIndex === index && (
                    <div className="mt-3 pt-3 border-t border-gray-100">
                      <p className="text-gray-600 leading-relaxed font-manrope text-sm">
                        {faqs[index].answer}
                      </p>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>

        <div className="text-center mt-12">
          <p className="text-sage mb-4 font-manrope">–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å?</p>
          <button className="bg-gradient-to-r from-mint-400 to-teal-400 text-white px-8 py-3 rounded-full font-semibold hover:from-mint-500 hover:to-teal-500 transition-all duration-300 hover:scale-105 font-montserrat">
            –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
          </button>
        </div>
      </div>
    </section>
  );
};

export default FAQ;